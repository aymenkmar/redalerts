apiVersion: v1
kind: Service
metadata:
 name: redalerts-int
 namespace: redalerts
spec:
 selector:
   app: redalerts-int
 ports:
 - name: http
   protocol: TCP
   port: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: redalerts-int
  namespace: redalerts
  annotations:
    cert-manager.io/cluster-issuer: "issuer-letsencrypt"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    acme.cert-manager.io/http01-edit-in-place: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/server-snippet: |
                add_header Host             $host;
                add_header X-Real-IP        $remote_addr;
                add_header X-Forwarded-For  $proxy_add_x_forwarded_for;
                add_header X-Forwarded-Proto https;
                add_header X-Forwarded-Port 443;
                add_header X-Forwarded-Host $proxy_add_x_forwarded_for;
                add_header X-Robots-Tag "noindex, nofollow";
                add_header X-Frame-Options "SAMEORIGIN";
                add_header X-Content-Type-Options "nosniff";
                add_header X-XSS-Protection "1; mode=block";
                #add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' *.youtube.com maps.gstatic.com *.k8s.satoripop.io *.googleapis.com *.google-analytics.com connect.facebook.net;frame-src 'self' *.youtube.com *.facebook.com s-static.ak.facebook.com;object-src 'self' *.k8s.satoripop.io;script-src-elem 'self' 'unsafe-inline' *.k8s.satoripop.io";
spec:
  tls:
  - hosts:
      - redalerts-int.k8s.satoripop.io
    secretName: redalerts-int-secret-tls
  rules:
  - host: redalerts-int.k8s.satoripop.io
    http:
      paths:
      - backend:
          serviceName: redalerts-int
          servicePort: 80